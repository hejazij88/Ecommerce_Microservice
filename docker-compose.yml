services:
  mongo:
    image: mongo:6
    container_name: catalog_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: catalog_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  jaeger:
    image: jaegertracing/all-in-one:1.49
    container_name: jaeger
    ports:
      - "16686:16686"
      - "6831:6831/udp"

  catalog.api:
    build:
      dockerfile: src/services/catalog/Catalog.Api/Dockerfile
    container_name: catalog_api
    depends_on:
      - mongo
      - rabbitmq
      - jaeger
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MONGO__CONNECTIONSTRING=mongodb://mongo:27017
      - MONGO__DATABASE=CatalogDb
    ports:
      - "6001:8080"

  basket.api:
    build:
      dockerfile: src/services/basket/Basket.Api/Dockerfile
    container_name: basket_api
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__ExchangeName=event_bus
      - RabbitMQ__ExchangeType=topic
      - RabbitMQ__DevBindQueue=true
      - RabbitMQ__DevQueueName=dev_basket_checkout_q
      - RabbitMQ__RoutingKey=basket.checkout
    ports:
      - "6003:8080"

  redis:
    image: "redis:alpine"
    container_name: basket_redis
    ports:
      - "6379:6379"

  orderdb:
    image: postgres:latest
    container_name: orderdb
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=OrderDb
    ports:
      - "5432:5432"
    volumes:
      - order_data:/var/lib/postgresql/data



volumes:
  order_data:
  mongo_data:

